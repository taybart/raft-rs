syntax = "proto3";

package raft;

enum Role {
  Follower = 0;
  Candidate = 1;
  Leader = 2;
}

/* rpc RequestVote(VoteRequest) returns (VoteResponse); */
message VoteRequest {
  uint64 term = 1;
  uint64 candidateId = 2;
  uint64 lastLogIndex = 3;
  uint64 lastLogTerm = 4;
}

message VoteResponse {
  uint64 term = 1;
  bool voteGranted = 2;
}


/* rpc AppendEntries(AppendRequest) returns (AppendResult); */

message LogEntry {
  string data = 1;
}
message AppendRequest {
  uint64 id = 1;
  uint64 term = 2;
  uint64 leaderId = 3;
  uint64 prevLogIndex = 4;
  uint64 prevLogTerm = 5;
  repeated LogEntry entries = 6;
}

message AppendResult {
  uint64 term = 1;
  bool success = 2;
}

/*** RPC ***/
enum Function { 
  AppendEntries = 0; 
  RequestVote = 1; 
  NetworkDiscovery = 2;
}

message RPC {
  Function call = 1;
  bytes request = 2;
}

message DiscoverRequest {
  string id = 1;
}
message DiscoverResponse {
  bool shouldRedirect = 1;
  string leader = 2;
  repeated string friends = 3;
}

/* service Raft { 
  rpc AppendEntries(AppendRequest) returns (AppendResult); 
  rpc RequestVote(VoteRequest) returns (VoteResponse); 
  rpc Discover() returns (DiscoverResponse)
} */
